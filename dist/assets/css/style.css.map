{"version":3,"sources":["style.css","global/_setting.scss","global/_breakpoints.scss","base/_base.scss","base/_reset.scss","module/_button.scss","module/_heading.scss","module/_inner.scss"],"names":[],"mappings":"AAAA,gBAAgB;ACmBhB;EAEE,cAAA;EADA,+BALiB;ADXnB;;AEmDE;EACE,aAAA;AFhDJ;AEuCE;EAQA;IAGI,cAAA;EF9CJ;AACF;;AEkCE;EAgBA;IAEI,aAAA;EF/CJ;AACF;;AGnBA,gBAAA;AAKE;EAOE,eAAA;AHYJ;AGjBI;EAFF;IAGI,yBAAA;EHoBJ;AACF;AEkBE;EC1CA;IAUI,yBAAA;EHkBJ;AACF;AGfI;EAdF;IAeI,eAAA;EHkBJ;AACF;;AIvCA;;;EAGE,sBAAA;AJ0CF;;AIvCA,2BAAA;AACA;;EAEE,UAAA;AJ0CF;;AIvCA,0BAAA;AACA;;;;;;;;;;;;EAYE,SAAA;AJ0CF;;AIvCA,2BAAA;AACA;EACE,uBAAA;AJ0CF;;AIvCA,2BAAA;AACA;EAGE,gBAAA;EAFA,iBAAA;EACA,kCAAA;AJ2CF;;AIvCA,iEAAA;AACA;;EAEE,gBAAA;AJ0CF;;AIvCA,0DAAA;AACA;EACE,iCAAA;UAAA,8BAAA;AJ0CF;;AIvCA,oCAAA;AACA;EAEE,cAAA;EADA,eAAA;EAEA,WAAA;AJ0CF;;AIvCA,mDAAA;AACA;EACE,eAAA;AJ0CF;;AIvCA,yCAAA;AACA;;;;EAIE,aAAA;AJ0CF;;AIvCA,gDAAA;AACA;EACE,kBAAA;AJ0CF;;AItCA,aAAA;AACA;;;;EAIE,wBAAA;EACA,qBAAA;EACA,gBAAA;EACA,uBAAA;EACA,YAAA;EACA,gBAAA;EACA,aAAA;EACA,aAAA;AJyCF;;AItCA;EACE,gBAAA;AJyCF;;AItCA;;EAEE,aAAA;AJyCF;;AItCA;;;;;EAKE,eAAA;AJyCF;;AItCA;EACE,aAAA;AJyCF;;AItCA,QAAA;AACA;EACE,6BAAA;EACA,cAAA;EADA,qBAAA;EAEA,wBAAA;AJyCF;;AK5JA;EAEE,yBJkCO;EI9BP,WJ6BM;EI9BN,eAAA;EAJA,qBAAA;EAOA,mBAAA;EACA,kBAAA;EAFA,eAAA;EAIA,kBAAA;EAPA,kBAAA;EAQA,sBAAA;EATA,gBAAA;EAOA,UAAA;ALiKF;;AK3JA;EACE,0BAAA;AL8JF;;AK3JA;EAQE,+BAAA;EAHA,SAAA;EAJA,WAAA;EAGA,OAAA;EAFA,kBAAA;EAIA,QAAA;EAHA,MAAA;EAIA,sCAAA;EAEA,WAAA;AL8JF;;AK3JA;EACE,iBAAA;EACA,kBAAA;AL8JF;;AK3JA;EAQE,yDAAA;EAEA,2BAAA;EADA,4BAAA;EAEA,wBAAA;EAVA,WAAA;EAGA,gBAAA;EAFA,kBAAA;EAIA,QAAA;EADA,QAAA;EAEA,2BAAA;EAJA,aAAA;ALsKF;;AM9MA;EACE,kBAAA;ANiNF;;AM9MA;EACE,eAAA;EACA,iBAAA;EACA,0BAAA;ANiNF;AE3KE;EIzCF;IAKI,iBAAA;IACA,cAAA;ENmNF;AACF;;AMhNA;EACE,cLqBO;AD8LT;;AMhNA;EAGE,cLeO;EKdP,uCLRmB;EKMnB,kBAAA;EAGA,gBAAA;EAJA,mBAAA;ANuNF;AE7LE;EI3BF;IAOE,kBAAA;ENqNA;AACF;;AO9OE;EAKE,iBAAA;EADA,kBAAA;EADA,kBNGS;EMJT,mBNIS;EMLT,WAAA;APqPJ;AE1ME;EK5CA;IAOI,iBAAA;IAEA,kBNJO;IMGP,mBNHO;EDuPX;AACF","file":"style.css","sourcesContent":["@charset \"UTF-8\";\nbody {\n  font-family: \"Gotu\", sans-serif;\n  color: #0D2936;\n}\n\n.u-desktop {\n  display: none;\n}\n@media screen and (min-width: 768px) {\n  .u-desktop {\n    display: block;\n  }\n}\n\n@media screen and (min-width: 768px) {\n  .u-mobile {\n    display: none;\n  }\n}\n\n/* リキッドレイアウト対応 */\nhtml {\n  font-size: 16px;\n}\n@media (max-width: 375px) {\n  html {\n    font-size: 4.2666666667vw;\n  }\n}\n@media screen and (min-width: 768px) {\n  html {\n    font-size: 1.4814814815vw;\n  }\n}\n@media (min-width: 1080px) {\n  html {\n    font-size: 16px;\n  }\n}\n\n*,\n*::before,\n*::after {\n  box-sizing: border-box;\n}\n\n/* Remove default padding */\nul,\nol {\n  padding: 0;\n}\n\n/* Remove default margin */\nbody,\nh1,\nh2,\nh3,\nh4,\np,\nul,\nol,\nfigure,\nblockquote,\ndl,\ndd {\n  margin: 0;\n}\n\n/* Set core root defaults */\nhtml {\n  scroll-behavior: smooth;\n}\n\n/* Set core body defaults */\nbody {\n  min-height: 100vh;\n  text-rendering: optimizeLegibility;\n  line-height: 1.5;\n}\n\n/* Remove list styles on ul, ol elements with a class attribute */\nul,\nol {\n  list-style: none;\n}\n\n/* A elements that don't have a class get default styles */\na:not([class]) {\n  text-decoration-skip-ink: auto;\n}\n\n/* Make images easier to work with */\nimg {\n  max-width: 100%;\n  display: block;\n  width: 100%;\n}\n\n/* Natural flow and rhythm in articles by default */\narticle > * + * {\n  margin-top: 1em;\n}\n\n/* Inherit fonts for inputs and buttons */\ninput,\nbutton,\ntextarea,\nselect {\n  font: inherit;\n}\n\n/* Blur images when they have no alt attribute */\nimg:not([alt]) {\n  filter: blur(10px);\n}\n\n/* フォームリセット */\ninput,\nbutton,\nselect,\ntextarea {\n  -webkit-appearance: none;\n  -moz-appearance: none;\n  appearance: none;\n  background: transparent;\n  border: none;\n  border-radius: 0;\n  font: inherit;\n  outline: none;\n}\n\ntextarea {\n  resize: vertical;\n}\n\ninput[type=checkbox],\ninput[type=radio] {\n  display: none;\n}\n\ninput[type=submit],\ninput[type=button],\nlabel,\nbutton,\nselect {\n  cursor: pointer;\n}\n\nselect::-ms-expand {\n  display: none;\n}\n\n/* ホバー */\na {\n  text-decoration: none;\n  color: inherit;\n  transition: opacity 0.3s;\n}\n\n.button {\n  display: inline-block;\n  background-color: #408F95;\n  width: 12.625rem;\n  text-align: center;\n  cursor: pointer;\n  color: #fff;\n  padding: 1rem 0;\n  font-size: 0.875rem;\n  line-height: 1.571;\n  z-index: 1;\n  position: relative;\n  transition: color 0.2s;\n}\n\n.button::first-letter {\n  text-transform: capitalize;\n}\n\n.button::before {\n  content: \"\";\n  position: absolute;\n  top: 0;\n  left: 0;\n  bottom: 0;\n  right: 0;\n  transform: translate(0.25rem, 0.25rem);\n  border: 0.0625rem solid #408F95;\n  z-index: -2;\n}\n\n.button span {\n  padding: 2.875rem;\n  position: relative;\n}\n\n.button span::after {\n  content: \"\";\n  position: absolute;\n  width: 2.5rem;\n  height: 0.375rem;\n  top: 48%;\n  right: 0;\n  transform: translateY(-50%);\n  background-image: url(../images/common/button-arrow1.png);\n  background-repeat: no-repeat;\n  background-position: center;\n  background-size: contain;\n}\n\n.heading {\n  text-align: center;\n}\n\n.heading__main {\n  font-size: 2rem;\n  line-height: 1.25;\n  text-transform: capitalize;\n}\n@media screen and (min-width: 768px) {\n  .heading__main {\n    font-size: 2.5rem;\n    line-height: 1;\n  }\n}\n\n.heading__main::first-letter {\n  color: #408F95;\n}\n\n.heading__sub {\n  margin-top: 0.25rem;\n  font-size: 0.75rem;\n  color: #408F95;\n  font-family: \"Noto Sans JP\", sans-serif;\n  font-weight: 300;\n}\n@media screen and (min-width: 768px) {\n  .heading__sub {\n    margin-top: 0.5rem;\n  }\n}\n\n.inner {\n  width: 100%;\n  padding-right: 15px;\n  padding-left: 15px;\n  margin-right: auto;\n  margin-left: auto;\n}\n@media screen and (min-width: 768px) {\n  .inner {\n    max-width: 1130px;\n    padding-right: 25px;\n    padding-left: 25px;\n  }\n}","@use \"sass:math\";\n\n// インナー幅設定\n// コンテンツのインナー幅（最も共通の幅が多い部分）\n$inner: 1080px;\n// ※キュンパス幅ではなくインナーの幅を指す\n\n// 余白\n$padding-pc: 25px;\n$padding-sp: 15px;\n\n////////////////////\n// フォント設定\n////////////////////\n\n$base-font-family: 'Gotu', sans-serif;\n$second-font-family: 'Noto Sans JP', sans-serif;\n// ※検証ツールでしっかり反映されているか確認する\n\nbody {\n  font-family: $base-font-family;\n  color: #0D2936;\n}\n\n// フォントウェイト\n$regular: 300;\n$normal: 400;\n$medium: 500;\n$bold: 700;\n\n////////////////////\n// 色の指定\n////////////////////\n\n//色指定（共通性のあるものは出来る限り指定すると良い）\n$black1: #0D2936;\n$black2: #000;\n$white: #fff;\n$green1: #408F95;\n$green2: #DDF0F1;\n$brown: #796A64;\n\n","// どっちファーストの設定（\"sp\" or \"pc\"）\n$startFrom: sp;\n\n// デフォルト値を設定\n$mediaquerys: (\n  sm: \"screen\",\n  md: \"screen\",\n  lg: \"screen\",\n  xl: \"screen\",\n);\n\n@if $startFrom == sp {\n  //スマホファースト\n  $breakpoints: (\n    sm: 600,\n    md: 768,\n    lg: 1024,\n    xl: 1440,\n  );\n\n  //メディアクエリー\n  $mediaquerys: (\n    sm: \"screen and (min-width: #{map-get($breakpoints,'sm')}px)\",\n    md: \"screen and (min-width: #{map-get($breakpoints,'md')}px)\",\n    lg: \"screen and (min-width: #{map-get($breakpoints,'lg')}px)\",\n    xl: \"screen and (min-width: #{map-get($breakpoints,'xl')}px)\",\n  );\n\n} @else {\n  $breakpoints: (\n    xl: 1440,\n    lg: 1023,\n    md: 767,\n    sm: 600,\n  );\n  $mediaquerys: (\n    sm: \"screen and (max-width: #{map-get($breakpoints,'sm')}px)\",\n    md: \"screen and (max-width: #{map-get($breakpoints,'md')}px)\",\n    lg: \"screen and (max-width: #{map-get($breakpoints,'lg')}px)\",\n    xl: \"screen and (min-width: #{map-get($breakpoints,'xl')}px)\",\n  );\n\n\n}\n\n// @include mq(){}で書くとブレークポイントが反映される（初期値はmd）\n@mixin mq($mediaquery: md) {\n  @media #{map-get($mediaquerys, $mediaquery)} {\n    @content;\n  }\n}\n\n\n@if $startFrom == sp {\n  //pcで表示\n  .u-desktop {\n    display: none;\n    @include mq(\"md\") {\n      display: block;\n    }\n  }\n\n  //モバイルのみ表示\n  .u-mobile {\n    @include mq(\"md\") {\n      display: none;\n    }\n  }\n} @else {\n  //pcで表示\n  .u-desktop {\n    display: block;\n    @include mq(\"md\") {\n      display: none;\n    }\n  }\n\n  //モバイルのみ表示\n  .u-mobile {\n    display: none;\n    @include mq(\"md\") {\n      display: block;\n    }\n  }\n}","/* リキッドレイアウト対応 */\n@use \"global\" as *;\n\n@if $startFrom == sp {\n  //スマホファースト\n  html {\n    //~375px\n    @media (max-width: 375px) {\n      font-size: vw(375, 16);\n    }\n\n    //375px~767px\n    font-size: 16px;\n\n    @include mq(\"md\") {\n      font-size: vw(strip-unit($inner), 16);\n    }\n\n    //inner~max-screen\n    @media (min-width: $inner) {\n      font-size: 16px;\n    }\n  }\n} @else {\n  //PCファースト\n  html {\n    font-size: 16px;\n\n    @media (max-width: $inner) {\n      font-size: vw(strip-unit($inner), 16);\n    }\n\n    @include mq(\"md\") {\n      font-size: 16px;\n    }\n\n    //~375px\n    @media (max-width: 375px) {\n      font-size: vw(375, 16);\n    }\n  }\n}\n","*,\n*::before,\n*::after {\n  box-sizing: border-box;\n}\n\n/* Remove default padding */\nul,\nol {\n  padding: 0;\n}\n\n/* Remove default margin */\nbody,\nh1,\nh2,\nh3,\nh4,\np,\nul,\nol,\nfigure,\nblockquote,\ndl,\ndd {\n  margin: 0;\n}\n\n/* Set core root defaults */\nhtml {\n  scroll-behavior: smooth;\n}\n\n/* Set core body defaults */\nbody {\n  min-height: 100vh;\n  text-rendering: optimizeLegibility;\n  line-height: 1.5;\n}\n\n/* Remove list styles on ul, ol elements with a class attribute */\nul,\nol {\n  list-style: none;\n}\n\n/* A elements that don't have a class get default styles */\na:not([class]) {\n  text-decoration-skip-ink: auto;\n}\n\n/* Make images easier to work with */\nimg {\n  max-width: 100%;\n  display: block;\n  width: 100%;\n}\n\n/* Natural flow and rhythm in articles by default */\narticle > * + * {\n  margin-top: 1em;\n}\n\n/* Inherit fonts for inputs and buttons */\ninput,\nbutton,\ntextarea,\nselect {\n  font: inherit;\n}\n\n/* Blur images when they have no alt attribute */\nimg:not([alt]) {\n  filter: blur(10px);\n}\n\n\n/* フォームリセット */\ninput,\nbutton,\nselect,\ntextarea {\n  -webkit-appearance: none;\n  -moz-appearance: none;\n  appearance: none;\n  background: transparent;\n  border: none;\n  border-radius: 0;\n  font: inherit;\n  outline: none;\n}\n\ntextarea {\n  resize: vertical;\n}\n\ninput[type=\"checkbox\"],\ninput[type=\"radio\"] {\n  display: none;\n}\n\ninput[type=\"submit\"],\ninput[type=\"button\"],\nlabel,\nbutton,\nselect {\n  cursor: pointer;\n}\n\nselect::-ms-expand {\n  display: none;\n}\n\n/* ホバー */\na {\n  text-decoration: none;\n  color: inherit;\n  transition: opacity 0.3s;\n}\n","@use \"global\" as *;\n\n.button {\n  display: inline-block;\n  background-color: $green1;\n  width: rem(202);\n  text-align: center;\n  cursor: pointer;\n  color: $white;\n  padding: rem(16) 0;\n  font-size: rem(14);\n  line-height: 1.571;\n  z-index: 1;\n  position: relative;\n  transition: color 0.2s;\n  // border: rem(1) solid $green1;\n}\n\n.button::first-letter {\n  text-transform: capitalize;\n}\n\n.button::before {\n  content: \"\";\n  position: absolute;\n  top: 0;\n  left: 0;\n  bottom: 0;\n  right: 0;\n  transform: translate(rem(4), rem(4));\n  border: rem(1) solid $green1;\n  z-index: -2;\n}\n\n.button span {\n  padding: rem(46);\n  position: relative;\n}\n\n.button span::after {\n  content: \"\";\n  position: absolute;\n  width: rem(40);\n  height: rem(6);\n  top: 48%;\n  right: 0;\n  transform: translateY(-50%);\n  background-image: url(../images/common/button-arrow1.png);\n  background-repeat: no-repeat;\n  background-position: center;\n  background-size: contain;\n}","@use \"global\" as *;\n\n.heading {\n  text-align: center;\n}\n\n.heading__main {\n  font-size: rem(32);\n  line-height: 1.25;\n  text-transform:capitalize;\n  @include mq(\"md\") {\n    font-size: rem(40);\n    line-height: 1;\n  }\n}\n\n.heading__main::first-letter {\n  color: $green1;\n}\n\n.heading__sub {\n  margin-top: rem(4);\n  font-size: rem(12);\n  color: $green1;\n  font-family: $second-font-family;\n  font-weight: $regular;\n  @include mq(\"md\") {\n  margin-top: rem(8);\n  }\n}\n\n","@use \"global\" as *;\n\n@if $startFrom == sp {\n  .inner {\n    width: 100%;\n    padding-right: $padding-sp;\n    padding-left: $padding-sp;\n    margin-right: auto;\n    margin-left: auto;\n    @include mq(\"md\") {\n      max-width: $inner + strip-unit($padding-pc) * 2;\n      padding-right: $padding-pc;\n      padding-left: $padding-pc;\n    }\n  }\n} @else {\n  .inner {\n    max-width: $inner + strip-unit($padding-pc) * 2;\n    padding-right: $padding-pc;\n    padding-left: $padding-pc;\n    width: 100%;\n    margin-right: auto;\n    margin-left: auto;\n    @include mq(\"md\") {\n      padding-right: $padding-sp;\n      padding-left: $padding-sp;\n    }\n  }\n}\n"]}